(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{271:function(e,t,n){"use strict";n.r(t);var r=n(16),a=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"键盘事件的种类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#键盘事件的种类","aria-hidden":"true"}},[e._v("#")]),e._v(" 键盘事件的种类")]),e._v(" "),n("p",[e._v("keydown：按下键盘时触发。\nkeypress：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发keydown事件，再触发这个事件。\nkeyup：松开键盘时触发该事件。\n如果用于一直按键不松开，就会一直触发键盘事件，触发顺序如下：\nkeydown\nkeypress\nkeydown\nkeypress\n...（重复以上过程）\nkeyup\n事件源KeyboardEvent")]),e._v(" "),n("p",[e._v("该类继承了event,并实现了自己定义的属性和方法\n浏览器原生提供KeyboardEvent构造函数，用来新建键盘事件的实例。")]),e._v(" "),n("p",[e._v("new KeyboardEvent(type, options)")]),e._v(" "),n("p",[e._v("KeyboardEvent构造函数接受两个参数。第一个参数是字符串，表示事件类型；第二个参数是一个事件配置对象，该参数可选。除了Event接口提供的属性，还可以配置以下字段，它们都是可选。")]),e._v(" "),n("p",[e._v("key：字符串，当前按下的键，默认为空字符串。\ncode：字符串，表示当前按下的键的字符串形式，默认为空字符串。\nlocation：整数，当前按下的键的位置，默认为0。\nctrlKey：布尔值，是否按下 Ctrl 键，默认为false。\nshiftKey：布尔值，是否按下 Shift 键，默认为false。\naltKey：布尔值，是否按下 Alt 键，默认为false。\nmetaKey：布尔值，是否按下 Meta 键，默认为false。\nrepeat：布尔值，是否重复按键，默认为false。")]),e._v(" "),n("p",[e._v("基本实例属性\n以下属性都是只读属性，返回一个布尔值，表示是否按下对应的键。")]),e._v(" "),n("p",[e._v("KeyboardEvent.altKey：是否按下 Alt 键\nKeyboardEvent.ctrlKey：是否按下 Ctrl 键\nKeyboardEvent.metaKey：是否按下 meta 键（Mac 系统是一个四瓣的小花，Windows 系统是 windows 键）\nKeyboardEvent.shiftKey：是否按下 Shift 键")]),e._v(" "),n("p",[e._v("实例属性code\nKeyboardEvent.code属性返回一个字符串，表示当前按下的键的字符串形式。该属性只读。")]),e._v(" "),n("p",[e._v("下面是一些常用键的字符串形式，其他键请查文档。")]),e._v(" "),n("p",[e._v("数字键0 - 9：返回digital0 - digital9\n字母键A - z：返回KeyA - KeyZ\n功能键F1 - F12：返回 F1 - F12\n方向键：返回ArrowDown、ArrowUp、ArrowLeft、ArrowRight\nAlt 键：返回AltLeft或AltRight\nShift 键：返回ShiftLeft或ShiftRight\nCtrl 键：返回ControlLeft或ControlRight")]),e._v(" "),n("p",[e._v("实例属性key\nKeyboardEvent.key属性返回一个字符串，表示按下的键名。该属性只读。")]),e._v(" "),n("p",[e._v("如果按下的键代表可打印字符，则返回这个字符，比如数字、字母。")]),e._v(" "),n("p",[e._v("如果按下的键代表不可打印的特殊字符，则返回预定义的键值，比如 Backspace，Tab，Enter，Shift，Control，Alt，CapsLock，Esc，Spacebar，PageUp，PageDown，End，Home，Left，Right，Up，Down，PrintScreen，Insert，Del，Win，F1～F12，NumLock，Scroll 等。")]),e._v(" "),n("p",[e._v("如果同时按下一个控制键和一个符号键，则返回符号键的键名。比如，按下 Ctrl + a，则返回a；按下 Shift + a，则返回大写的A。")]),e._v(" "),n("p",[e._v("如果无法识别键名，返回字符串Unidentified。")]),e._v(" "),n("p",[e._v("实例属性location\nKeyboardEvent.location属性返回一个整数，表示按下的键处在键盘的哪一个区域。它可能取以下值。")]),e._v(" "),n("p",[e._v("0：处在键盘的主区域，或者无法判断处于哪一个区域。\n1：处在键盘的左侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。\n2：处在键盘的右侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。\n3：处在数字小键盘。")]),e._v(" "),n("p",[e._v("实例属性repeat\nKeyboardEvent.repeat返回一个布尔值，代表该键是否被按着不放，以便判断是否重复这个键，即浏览器会持续触发keydown和keypress事件，直到用户松开手为止。")]),e._v(" "),n("p",[e._v("KeyboardEvent 的实例方法")]),e._v(" "),n("p",[e._v("getModifierState()\nKeyboardEvent.getModifierState()方法返回一个布尔值，表示是否按下或激活指定的功能键。它的常用参数如下。")]),e._v(" "),n("p",[e._v("Alt：Alt 键\nCapsLock：大写锁定键\nControl：Ctrl 键\nMeta：Meta 键\nNumLock：数字键盘开关键\nShift：Shift 键\nif (\nevent.getModifierState('Control') +\nevent.getModifierState('Alt') +\nevent.getModifierState('Meta') > 1\n) {\nreturn;\n}")])])},[],!1,null,null,null);t.default=a.exports}}]);